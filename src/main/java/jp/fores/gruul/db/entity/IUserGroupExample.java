package jp.fores.gruul.db.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class IUserGroupExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    public IUserGroupExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGroupUuidIsNull() {
            addCriterion("group_uuid is null");
            return (Criteria) this;
        }

        public Criteria andGroupUuidIsNotNull() {
            addCriterion("group_uuid is not null");
            return (Criteria) this;
        }

        public Criteria andGroupUuidEqualTo(String value) {
            addCriterion("group_uuid =", value, "groupUuid");
            return (Criteria) this;
        }

        public Criteria andGroupUuidNotEqualTo(String value) {
            addCriterion("group_uuid <>", value, "groupUuid");
            return (Criteria) this;
        }

        public Criteria andGroupUuidGreaterThan(String value) {
            addCriterion("group_uuid >", value, "groupUuid");
            return (Criteria) this;
        }

        public Criteria andGroupUuidGreaterThanOrEqualTo(String value) {
            addCriterion("group_uuid >=", value, "groupUuid");
            return (Criteria) this;
        }

        public Criteria andGroupUuidLessThan(String value) {
            addCriterion("group_uuid <", value, "groupUuid");
            return (Criteria) this;
        }

        public Criteria andGroupUuidLessThanOrEqualTo(String value) {
            addCriterion("group_uuid <=", value, "groupUuid");
            return (Criteria) this;
        }

        public Criteria andGroupUuidLike(String value) {
            addCriterion("group_uuid like", value, "groupUuid");
            return (Criteria) this;
        }

        public Criteria andGroupUuidNotLike(String value) {
            addCriterion("group_uuid not like", value, "groupUuid");
            return (Criteria) this;
        }

        public Criteria andGroupUuidIn(List<String> values) {
            addCriterion("group_uuid in", values, "groupUuid");
            return (Criteria) this;
        }

        public Criteria andGroupUuidNotIn(List<String> values) {
            addCriterion("group_uuid not in", values, "groupUuid");
            return (Criteria) this;
        }

        public Criteria andGroupUuidBetween(String value1, String value2) {
            addCriterion("group_uuid between", value1, value2, "groupUuid");
            return (Criteria) this;
        }

        public Criteria andGroupUuidNotBetween(String value1, String value2) {
            addCriterion("group_uuid not between", value1, value2, "groupUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidIsNull() {
            addCriterion("user_uuid is null");
            return (Criteria) this;
        }

        public Criteria andUserUuidIsNotNull() {
            addCriterion("user_uuid is not null");
            return (Criteria) this;
        }

        public Criteria andUserUuidEqualTo(String value) {
            addCriterion("user_uuid =", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidNotEqualTo(String value) {
            addCriterion("user_uuid <>", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidGreaterThan(String value) {
            addCriterion("user_uuid >", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidGreaterThanOrEqualTo(String value) {
            addCriterion("user_uuid >=", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidLessThan(String value) {
            addCriterion("user_uuid <", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidLessThanOrEqualTo(String value) {
            addCriterion("user_uuid <=", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidLike(String value) {
            addCriterion("user_uuid like", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidNotLike(String value) {
            addCriterion("user_uuid not like", value, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidIn(List<String> values) {
            addCriterion("user_uuid in", values, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidNotIn(List<String> values) {
            addCriterion("user_uuid not in", values, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidBetween(String value1, String value2) {
            addCriterion("user_uuid between", value1, value2, "userUuid");
            return (Criteria) this;
        }

        public Criteria andUserUuidNotBetween(String value1, String value2) {
            addCriterion("user_uuid not between", value1, value2, "userUuid");
            return (Criteria) this;
        }

        public Criteria andJoinedIsNull() {
            addCriterion("joined is null");
            return (Criteria) this;
        }

        public Criteria andJoinedIsNotNull() {
            addCriterion("joined is not null");
            return (Criteria) this;
        }

        public Criteria andJoinedEqualTo(Boolean value) {
            addCriterion("joined =", value, "joined");
            return (Criteria) this;
        }

        public Criteria andJoinedNotEqualTo(Boolean value) {
            addCriterion("joined <>", value, "joined");
            return (Criteria) this;
        }

        public Criteria andJoinedGreaterThan(Boolean value) {
            addCriterion("joined >", value, "joined");
            return (Criteria) this;
        }

        public Criteria andJoinedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("joined >=", value, "joined");
            return (Criteria) this;
        }

        public Criteria andJoinedLessThan(Boolean value) {
            addCriterion("joined <", value, "joined");
            return (Criteria) this;
        }

        public Criteria andJoinedLessThanOrEqualTo(Boolean value) {
            addCriterion("joined <=", value, "joined");
            return (Criteria) this;
        }

        public Criteria andJoinedIn(List<Boolean> values) {
            addCriterion("joined in", values, "joined");
            return (Criteria) this;
        }

        public Criteria andJoinedNotIn(List<Boolean> values) {
            addCriterion("joined not in", values, "joined");
            return (Criteria) this;
        }

        public Criteria andJoinedBetween(Boolean value1, Boolean value2) {
            addCriterion("joined between", value1, value2, "joined");
            return (Criteria) this;
        }

        public Criteria andJoinedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("joined not between", value1, value2, "joined");
            return (Criteria) this;
        }

        public Criteria andRemovedIsNull() {
            addCriterion("removed is null");
            return (Criteria) this;
        }

        public Criteria andRemovedIsNotNull() {
            addCriterion("removed is not null");
            return (Criteria) this;
        }

        public Criteria andRemovedEqualTo(Boolean value) {
            addCriterion("removed =", value, "removed");
            return (Criteria) this;
        }

        public Criteria andRemovedNotEqualTo(Boolean value) {
            addCriterion("removed <>", value, "removed");
            return (Criteria) this;
        }

        public Criteria andRemovedGreaterThan(Boolean value) {
            addCriterion("removed >", value, "removed");
            return (Criteria) this;
        }

        public Criteria andRemovedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("removed >=", value, "removed");
            return (Criteria) this;
        }

        public Criteria andRemovedLessThan(Boolean value) {
            addCriterion("removed <", value, "removed");
            return (Criteria) this;
        }

        public Criteria andRemovedLessThanOrEqualTo(Boolean value) {
            addCriterion("removed <=", value, "removed");
            return (Criteria) this;
        }

        public Criteria andRemovedIn(List<Boolean> values) {
            addCriterion("removed in", values, "removed");
            return (Criteria) this;
        }

        public Criteria andRemovedNotIn(List<Boolean> values) {
            addCriterion("removed not in", values, "removed");
            return (Criteria) this;
        }

        public Criteria andRemovedBetween(Boolean value1, Boolean value2) {
            addCriterion("removed between", value1, value2, "removed");
            return (Criteria) this;
        }

        public Criteria andRemovedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("removed not between", value1, value2, "removed");
            return (Criteria) this;
        }

        public Criteria andArrivedIsNull() {
            addCriterion("arrived is null");
            return (Criteria) this;
        }

        public Criteria andArrivedIsNotNull() {
            addCriterion("arrived is not null");
            return (Criteria) this;
        }

        public Criteria andArrivedEqualTo(Boolean value) {
            addCriterion("arrived =", value, "arrived");
            return (Criteria) this;
        }

        public Criteria andArrivedNotEqualTo(Boolean value) {
            addCriterion("arrived <>", value, "arrived");
            return (Criteria) this;
        }

        public Criteria andArrivedGreaterThan(Boolean value) {
            addCriterion("arrived >", value, "arrived");
            return (Criteria) this;
        }

        public Criteria andArrivedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("arrived >=", value, "arrived");
            return (Criteria) this;
        }

        public Criteria andArrivedLessThan(Boolean value) {
            addCriterion("arrived <", value, "arrived");
            return (Criteria) this;
        }

        public Criteria andArrivedLessThanOrEqualTo(Boolean value) {
            addCriterion("arrived <=", value, "arrived");
            return (Criteria) this;
        }

        public Criteria andArrivedIn(List<Boolean> values) {
            addCriterion("arrived in", values, "arrived");
            return (Criteria) this;
        }

        public Criteria andArrivedNotIn(List<Boolean> values) {
            addCriterion("arrived not in", values, "arrived");
            return (Criteria) this;
        }

        public Criteria andArrivedBetween(Boolean value1, Boolean value2) {
            addCriterion("arrived between", value1, value2, "arrived");
            return (Criteria) this;
        }

        public Criteria andArrivedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("arrived not between", value1, value2, "arrived");
            return (Criteria) this;
        }

        public Criteria andCommentIsNull() {
            addCriterion("comment is null");
            return (Criteria) this;
        }

        public Criteria andCommentIsNotNull() {
            addCriterion("comment is not null");
            return (Criteria) this;
        }

        public Criteria andCommentEqualTo(String value) {
            addCriterion("comment =", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotEqualTo(String value) {
            addCriterion("comment <>", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentGreaterThan(String value) {
            addCriterion("comment >", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentGreaterThanOrEqualTo(String value) {
            addCriterion("comment >=", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentLessThan(String value) {
            addCriterion("comment <", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentLessThanOrEqualTo(String value) {
            addCriterion("comment <=", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentLike(String value) {
            addCriterion("comment like", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotLike(String value) {
            addCriterion("comment not like", value, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentIn(List<String> values) {
            addCriterion("comment in", values, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotIn(List<String> values) {
            addCriterion("comment not in", values, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentBetween(String value1, String value2) {
            addCriterion("comment between", value1, value2, "comment");
            return (Criteria) this;
        }

        public Criteria andCommentNotBetween(String value1, String value2) {
            addCriterion("comment not between", value1, value2, "comment");
            return (Criteria) this;
        }

        public Criteria andDeletedAtIsNull() {
            addCriterion("deleted_at is null");
            return (Criteria) this;
        }

        public Criteria andDeletedAtIsNotNull() {
            addCriterion("deleted_at is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedAtEqualTo(Date value) {
            addCriterion("deleted_at =", value, "deletedAt");
            return (Criteria) this;
        }

        public Criteria andDeletedAtNotEqualTo(Date value) {
            addCriterion("deleted_at <>", value, "deletedAt");
            return (Criteria) this;
        }

        public Criteria andDeletedAtGreaterThan(Date value) {
            addCriterion("deleted_at >", value, "deletedAt");
            return (Criteria) this;
        }

        public Criteria andDeletedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("deleted_at >=", value, "deletedAt");
            return (Criteria) this;
        }

        public Criteria andDeletedAtLessThan(Date value) {
            addCriterion("deleted_at <", value, "deletedAt");
            return (Criteria) this;
        }

        public Criteria andDeletedAtLessThanOrEqualTo(Date value) {
            addCriterion("deleted_at <=", value, "deletedAt");
            return (Criteria) this;
        }

        public Criteria andDeletedAtIn(List<Date> values) {
            addCriterion("deleted_at in", values, "deletedAt");
            return (Criteria) this;
        }

        public Criteria andDeletedAtNotIn(List<Date> values) {
            addCriterion("deleted_at not in", values, "deletedAt");
            return (Criteria) this;
        }

        public Criteria andDeletedAtBetween(Date value1, Date value2) {
            addCriterion("deleted_at between", value1, value2, "deletedAt");
            return (Criteria) this;
        }

        public Criteria andDeletedAtNotBetween(Date value1, Date value2) {
            addCriterion("deleted_at not between", value1, value2, "deletedAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNull() {
            addCriterion("created_at is null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIsNotNull() {
            addCriterion("created_at is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedAtEqualTo(Date value) {
            addCriterion("created_at =", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotEqualTo(Date value) {
            addCriterion("created_at <>", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThan(Date value) {
            addCriterion("created_at >", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("created_at >=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThan(Date value) {
            addCriterion("created_at <", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtLessThanOrEqualTo(Date value) {
            addCriterion("created_at <=", value, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtIn(List<Date> values) {
            addCriterion("created_at in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotIn(List<Date> values) {
            addCriterion("created_at not in", values, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtBetween(Date value1, Date value2) {
            addCriterion("created_at between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andCreatedAtNotBetween(Date value1, Date value2) {
            addCriterion("created_at not between", value1, value2, "createdAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNull() {
            addCriterion("updated_at is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNotNull() {
            addCriterion("updated_at is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtEqualTo(Date value) {
            addCriterion("updated_at =", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotEqualTo(Date value) {
            addCriterion("updated_at <>", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThan(Date value) {
            addCriterion("updated_at >", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("updated_at >=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThan(Date value) {
            addCriterion("updated_at <", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanOrEqualTo(Date value) {
            addCriterion("updated_at <=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIn(List<Date> values) {
            addCriterion("updated_at in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotIn(List<Date> values) {
            addCriterion("updated_at not in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtBetween(Date value1, Date value2) {
            addCriterion("updated_at between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotBetween(Date value1, Date value2) {
            addCriterion("updated_at not between", value1, value2, "updatedAt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table i_user_group
     *
     * @mbggenerated do_not_delete_during_merge Tue Nov 18 16:00:43 JST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table i_user_group
     *
     * @mbggenerated Tue Nov 18 16:00:43 JST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}